/*
 * =================================================================================================
 * Premium Animations for Chembotwe Mattresses
 * Version: 2.0.0
 * Author: Gemini AI
 * Description: A dedicated and expanded stylesheet for creating a royal and premium scroll 
 * animation experience. This file provides a comprehensive suite of elegant, 
 * non-random animations designed to be triggered by the accompanying JavaScript file.
 * =================================================================================================
 */

/*
 * -------------------------------------------------------------------------------------------------
 * TABLE OF CONTENTS
 * -------------------------------------------------------------------------------------------------
 * 1. Core Animation Engine
 * - Defines the initial state and visible state for all animated elements.
 *
 * 2. Keyframe Definitions
 * - A collection of @keyframes for more complex and multi-step animations.
 *
 * 3. Animation Type Definitions
 * - Simple transform-based animations for common effects.
 * - Fade In
 * - Slide In (Up, Down, Left, Right)
 * - Zoom In / Out
 * - Rotate In
 *
 * 4. Advanced Reveal Animations
 * - Masking and clipping path animations for elegant content reveals.
 *
 * 5. Animation Utility Modifiers
 * - Data attributes to control duration, delay, and easing curves.
 *
 * 6. Section-Specific Overrides
 * - Curated animation styles for a non-random, premium feel on specific page sections.
 * -------------------------------------------------------------------------------------------------
 */


/* =================================================================================================
 * 1. CORE ANIMATION ENGINE
 * ================================================================================================= */

/*
 * Initial State for all animated elements.
 * By default, elements are invisible and ready to be animated.
 * The 'will-change' property is a performance optimization that hints to the browser
 * which properties are likely to change, allowing it to optimize ahead of time.
*/
[data-animation] {
    opacity: 0;
    /* Default transition for a smooth, elegant feel */
    transition-property: opacity, transform;
    transition-duration: 900ms;
    transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
    /* A gentle "overshoot" easing */
    will-change: transform, opacity;
}

    /*
 * Visible State
 * When the 'is-visible' class is added by the JavaScript Intersection Observer,
 * the element animates to its final, natural state (no transform, full opacity).
*/
    [data-animation].is-visible {
        opacity: 1;
        transform: none;
    }


/* =================================================================================================
 * 2. KEYFRAME DEFINITIONS
 * ================================================================================================= */

/* A more dramatic entrance combining slide, fade, and a subtle rotation */
@keyframes royal-entrance {
    from {
        opacity: 0;
        transform: translateY(100px) scale(0.95) rotateZ(-2deg);
    }

    to {
        opacity: 1;
        transform: translateY(0) scale(1) rotateZ(0);
    }
}

/* A subtle pulse effect for highlighting key features */
@keyframes subtle-pulse {

    0%, 100% {
        transform: scale(1);
    }

    50% {
        transform: scale(1.03);
    }
}

/* A gentle shimmer effect for text or badges */
@keyframes shimmer {
    0% {
        background-position: -800px 0;
    }

    100% {
        background-position: 800px 0;
    }
}

/* Keyframes for a bottom-up reveal effect */
@keyframes reveal-from-bottom-kf {
    from {
        clip-path: inset(100% 0 0 0);
    }

    to {
        clip-path: inset(0 0 0 0);
    }
}

/* Keyframes for a left-to-right reveal effect */
@keyframes reveal-from-left-kf {
    from {
        clip-path: inset(0 100% 0 0);
    }

    to {
        clip-path: inset(0 0 0 0);
    }
}


/* =================================================================================================
 * 3. ANIMATION TYPE DEFINITIONS
 * ================================================================================================= */

/* --- Fades --- */
[data-animation="fade-in"] {
    opacity: 0;
}

/* --- Slides --- */
[data-animation="fade-in-up"] {
    transform: translateY(50px);
}

[data-animation="fade-in-up-big"] {
    transform: translateY(100px);
}

[data-animation="fade-in-down"] {
    transform: translateY(-50px);
}

[data-animation="fade-in-down-big"] {
    transform: translateY(-100px);
}

[data-animation="fade-in-left"] {
    transform: translateX(-80px);
}

[data-animation="fade-in-left-big"] {
    transform: translateX(-150px);
}

[data-animation="fade-in-right"] {
    transform: translateX(80px);
}

[data-animation="fade-in-right-big"] {
    transform: translateX(150px);
}

/* --- Zooms --- */
[data-animation="zoom-in"] {
    transform: scale(0.9);
}

[data-animation="zoom-in-big"] {
    transform: scale(0.8);
}

[data-animation="zoom-out"] {
    transform: scale(1.1);
}

[data-animation="zoom-out-big"] {
    transform: scale(1.2);
}

/* --- Rotations --- */
[data-animation="rotate-in-left"] {
    transform: rotateZ(-10deg) scale(0.9);
    transform-origin: left bottom;
}

[data-animation="rotate-in-right"] {
    transform: rotateZ(10deg) scale(0.9);
    transform-origin: right bottom;
}


/* =================================================================================================
 * 4. ADVANCED REVEAL ANIMATIONS
 * ================================================================================================= */

/*
 * These animations use clip-path to create a "masking" effect where content appears
 * to be revealed from behind an invisible curtain.
*/

[data-animation="reveal-from-bottom"] {
    /* Start with the element fully clipped from the bottom */
    clip-path: inset(100% 0 0 0);
    transform: none;
    /* Important: We set transform to none as we only want to animate the clip-path */
}

    [data-animation="reveal-from-bottom"].is-visible {
        /* Animate to a fully visible clip-path */
        clip-path: inset(0 0 0 0);
        /* Ensure opacity is also animated */
        opacity: 1;
    }


[data-animation="reveal-from-left"] {
    clip-path: inset(0 100% 0 0);
    transform: none;
}

    [data-animation="reveal-from-left"].is-visible {
        clip-path: inset(0 0 0 0);
        opacity: 1;
    }

[data-animation="reveal-from-right"] {
    clip-path: inset(0 0 0 100%);
    transform: none;
}

    [data-animation="reveal-from-right"].is-visible {
        clip-path: inset(0 0 0 0);
        opacity: 1;
    }


/* =================================================================================================
 * 5. ANIMATION UTILITY MODIFIERS
 * ================================================================================================= */

/*
 * These can be added to any animated element to modify its behavior.
 * Example: <div data-animation="fade-in-up" data-animation-duration="slow">...</div>
*/

/* --- Duration --- */
[data-animation-duration="fast"] {
    transition-duration: 400ms;
}

[data-animation-duration="slow"] {
    transition-duration: 1500ms;
}

[data-animation-duration="very-slow"] {
    transition-duration: 2000ms;
}

/* --- Easing --- */
[data-animation-easing="ease-out-cubic"] {
    transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1);
}

[data-animation-easing="ease-in-out-circ"] {
    transition-timing-function: cubic-bezier(0.785, 0.135, 0.15, 0.86);
}

[data-animation-easing="ease-out-expo"] {
    transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
}


/* =================================================================================================
 * 6. SECTION-SPECIFIC OVERRIDES & STYLES
 * ================================================================================================= */

/*
 * Staggered Animations
 * For child elements within a container that has a data-stagger attribute.
 * The --stagger-delay custom property is applied via inline style from JavaScript.
*/
[data-stagger] > * {
    transition-delay: var(--stagger-delay, 0s);
}

/* Hero Section: Animate the text elements with a slight delay */
.hero-content .hero-badge {
    transition-delay: 100ms;
}

.hero-content .hero-title {
    transition-delay: 200ms;
}

.hero-content .hero-subtitle {
    transition-delay: 400ms;
}

.hero-content .hero-cta {
    transition-delay: 600ms;
}

.hero-content .hero-features {
    transition-delay: 800ms;
}


/* Banner Section: Create a slide-in effect from opposite sides */
.banner-section .banner-image[data-animation="fade-in-left"] {
    transition-duration: 1000ms;
    transition-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
}

.banner-section .banner-content[data-animation="fade-in-right"] {
    transition-duration: 1000ms;
    transition-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
    transition-delay: 200ms;
    /* Slight delay for a more dynamic feel */
}

/* Products Section: A subtle zoom for each card */
.products-grid .product-card[data-animation="zoom-in"] {
    transition-duration: 700ms;
    transition-timing-function: ease-out;
}

/* About Section: Elegant reveal for the text and a punchy animation for the stats */
#about .about-text[data-animation] {
    transition-duration: 1200ms;
}

#about .about-stats .stat-item[data-animation] {
    transition-duration: 800ms;
    transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Testimonials Section: Cards slide up with a premium easing */
#testimonials .testimonial-card[data-animation] {
    transition-duration: 900ms;
    transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
}

/* Shimmer effect for the title highlight */
.title-highlight.shimmer-effect {
    background: linear-gradient(to right, var(--secondary-light) 20%, var(--secondary-color) 40%, var(--secondary-light) 60%);
    background-size: 200% auto;
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    animation: shimmer 3s linear infinite;
}
